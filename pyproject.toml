[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "universal-web-scraper-python"
version = "0.1.0"
description = "Enterprise-grade web scraper with Kubernetes orchestration, async processing, and pluggable parser architecture."
authors = [
    {name = "Tom Russell", email = "tsrdatatech@gmail.com"},
]
readme = "README.md"
requires-python = ">=3.10"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers", 
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

[project.scripts]
scrape = "src.main:main"

[project.urls]
Homepage = "https://github.com/tsrdatatech/web-scrapers-python"
Issues = "https://github.com/tsrdatatech/web-scrapers-python/issues"

# Hatchling configuration for package discovery
[tool.hatch.build.targets.wheel]
packages = ["src"]

# Tool configurations for development tools and editors
[tool.ruff]
line-length = 88
target-version = "py310"

[tool.ruff.lint]
select = ["E", "F", "I", "N", "W", "UP"]
ignore = ["E501"]  # Line too long (handled by ruff format)

[tool.ruff.format]
docstring-code-format = true

[tool.mypy]
python_version = "3.10"
ignore_missing_imports = true
disallow_untyped_defs = false
warn_return_any = false
warn_unused_configs = false
check_untyped_defs = false
warn_no_return = false
strict_optional = false
allow_untyped_globals = true
allow_redefinition = true
follow_imports = "silent"
show_error_codes = true

# Skip type checking for problematic modules and third-party integrations
[[tool.mypy.overrides]]
module = [
    "src.database.*",
    "src.orchestrator",
    "src.ai.*",
    "src.main",
    "src.core.proxy_config",
    "src.routes",
]
ignore_errors = true

# Allow missing stubs for external dependencies
[[tool.mypy.overrides]]
module = [
    "aiofiles.*",
    "crawlee.*",
    "newspaper.*",
    "trafilatura.*",
    "kubernetes.*",
    "cassandra.*",
    "langchain.*",
    "playwright.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short"
asyncio_mode = "auto"