version: '3.8'

services:
  cassandra:
    image: cassandra:4.1
    container_name: web-scraper-cassandra
    ports:
      - "9042:9042"
      - "9160:9160"  # Thrift port (optional)
    environment:
      - CASSANDRA_CLUSTER_NAME=WebScraperCluster
      - CASSANDRA_DC=datacenter1
      - CASSANDRA_RACK=rack1
      - CASSANDRA_ENDPOINT_SNITCH=GossipingPropertyFileSnitch
      - CASSANDRA_NUM_TOKENS=256
      - MAX_HEAP_SIZE=1G
      - HEAP_NEWSIZE=200M
    volumes:
      - cassandra_data:/var/lib/cassandra
      - ./deployment/cassandra/cassandra.yaml:/etc/cassandra/cassandra.yaml
      - ./deployment/cassandra/init-scripts:/docker-entrypoint-initdb.d
    networks:
      - scraper-network
    healthcheck:
      test: ["CMD-SHELL", "cqlsh -e 'describe cluster'"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 2m

  cassandra-web:
    image: markusgulden/cassandra-web:latest
    container_name: cassandra-web-ui
    ports:
      - "3000:3000"
    environment:
      - CASSANDRA_HOST=cassandra
      - CASSANDRA_PORT=9042
    depends_on:
      cassandra:
        condition: service_healthy
    networks:
      - scraper-network

  web-scraper:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: web-scraper-app
    environment:
      - CASSANDRA_HOSTS=cassandra
      - CASSANDRA_KEYSPACE=web_scraper
      - CASSANDRA_PORT=9042
      - PYTHONPATH=/app
    volumes:
      - ./storage:/app/storage
      - ./logs:/app/logs
    depends_on:
      cassandra:
        condition: service_healthy
    networks:
      - scraper-network
    command: ["python", "src/main.py", "--file", "seeds.txt"]

volumes:
  cassandra_data:
    driver: local

networks:
  scraper-network:
    driver: bridge
